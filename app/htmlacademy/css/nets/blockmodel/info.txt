Блочные элементы
Элементы HTML страницы обычно делятся на блочные и строчные.

Блочные элементы можно представлять как прямоугольные области на странице. Они имеют следующие особенности:

До и после блочного элемента существует перенос строки.
Блочным элементам можно задавать ширину, высоту, внутренние и внешние отступы.
Занимают всё доступное пространство по горизонтали.
К блочным элементам относятся такие теги как: <p>, <h1>, <h2>, <ul> и так далее.

Еще один важный блочный тег — это тег <div>, который обозначает просто «блок» или «прямоугольный контейнер».
 Этот тег чаще всего используется для создания сеток.

Существуют и более сложные типы элементов, им будет посвящена вторая часть курса.


blockintro
--------------------------------
Строчные элементы


Строчные элементы располагаются друг за другом в одной строке, при необходимости строка переносится. Особенности строчных элементов:

До и после строчного элемента отсутствуют переносы строки.
Ширина и высота строчного элемента зависит только от его содержания, задать размеры с помощью CSS нельзя.
Можно задавать только горизонтальные отступы.
К строчным элементам относятся такие теги как: <a>, <strong>, <em>, <span> и так далее.

Строчные элементы предназначены для оформления текста на уровне небольших фраз и отдельных слов. Блочные же элементы
предназначены для разметки крупных блоков текста (заголовки, абзацы, списки) и создания сетки.

inlineelements
---------------------------------
Ширина и высота

Ширина и высота элементов задаются с помощью свойств width и height соответственно.
По умолчанию блочные элементы занимают всю доступную ширину, которая равна ширине родительского контейнера или окна браузера.
Высота по умолчанию блочных элементов зависит от их содержимого. Если задать блочному элементу ширину и высоту так,
 что содержимое элемента не будет в него помещаться, то оно как бы «выпадет» из него.
Строчные элементы не реагируют на задание ширины и высоты в CSS.

Задать ширину блоку можно, например, так:

.selector {
    width: 100px;
    height: 100px;
}
Вернуть значения по умолчанию можно с помощью специального значения auto:

.selector {
    width: auto;
    height: auto;
}


withheight
----------------------------------
Внутренние отступы, свойство padding

Свойство padding задает внутренние отступы элемента — отступы от внешней границы элемента до его содержания.
Эти отступы еще иногда называют полями.

Существует несколько способов записи свойства padding.

padding: 10px;
padding: 5px 10px;
padding: 5px 10px 15px;
padding: 5px 10px 15px 20px;
Одинаковые отступы со всех сторон.

Отступы сверху и снизу 5px, справа и слева 10px.

Отступ сверху 5px, слева и справа 10px, снизу 15px.

Разные отступы со всех сторон, в порядке верхний, правый, нижний, левый.

Также можно задавать отступы для разных сторон с помощью свойств padding-left, padding-right, padding-top, padding-bottom.

Для строчных элементов лучше не задавать вертикальных отступов, т.к. они ведут себя непредсказуемо.

В задании внутренние отступы блоков сделаны прозрачными.

padding
----------------------------------
Внешние отступы, свойство margin

Свойство margin задает внешние отступы элемента — отступы от внешней границы элемента до
границ родительского элемента или до соседних элементов.

Способы записи свойства margin аналогичны свойству padding.

margin: 10px;
margin: 5px 10px;
margin: 5px 10px 15px;
margin: 5px 10px 15px 20px;
Одинаковые отступы со всех сторон.

Сверху и снизу 5px, справа и слева 10px.

Сверху 5px, слева и справа 10px, снизу 15px.

Верхний, правый, нижний, левый отступы соответственно.

Можно задавать отступы для разных сторон с помощью свойств margin-left, margin-right, margin-top, margin-bottom.

Строчные элементы реагируют только на горизонтальные отступы.

margin
-------------------------------------
Рамки

Рамка задаётся с помощью свойства border, которое состоит из трёх компонентов:

ширина рамки;
стиль рамки;
цвет.
Например:

selector{
    border: 5px solid red;
}
Это правило задаёт красную сплошную рамку толщиной 5px.
Задавать рамку можно одним свойством border, а можно и с помощью отдельных свойств border-width, border-style, border-color. Например:

selector{
    border-width: 5px;
    border-style: solid;
    border-color: red;
}
Это правило задаёт такую же рамку, как и в примере выше.
Несколько самых распространенных стилей рамок:

solid — сплошная;
dashed — пунктирная;
dotted — точками.
Рамку можно задавать и строчным, и блочным элементам.

frame
-------------------------------------
Стандартная блочная модель

Стандартная блочная модель отвечает на основной вопрос:
Сколько же в итоге места будет занимать элемент?
Ответ следующий:

Область, занимаемая блочным элементом, складывается из его ширины и высоты содержания, внутренних и внешних отступов, ширины рамок .
Для строчных элементов есть свои особенности, которые мы опишем позже.

Схема блочной модели:
Блочная модель

ширина/высота содержания — свойства width и height (синий прямоугольник на схеме);
внутренние отступы — свойство padding;
рамки — свойство border;
внешние отступы — свойство margin.

standardblockmodel
-------------------------------------



