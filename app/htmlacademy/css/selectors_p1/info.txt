Нелёгкая жизнь без селекторов

Селекторы позволяют очень точно указывать к каким элементам применять CSS-свойства. Селекторы — это наш снайперский прицел, в
этом курсе мы будем учиться им пользоваться.
Так как курс посвящён «стрельбе свойствами по элементам», то тема биатлона подходит как нельзя кстати. В каждом задании вам нужно
 будет с помощью селекторов закрывать мишени.
Но для начала представим, что механизма селекторов не существует. Как в этом случае задавать CSS-свойства элементам? С помощью
атрибута style. Например:

<p style="color: red;">...</p>
first
--------------------------------------------
Селекторы по тегам
Задавать атрибут style для каждого тега неудобно и долго. Особенно, если тот же результат можно получить
 с помощью единственного CSS-правила, в котором используется селектор для тега li.

С помощью селекторов по именам тегов можно задать стили для всех элементов списка, изображений, абзацев и так
 далее. Эти селекторы содержат имя тега без символов < и >. Например:

li {
  /* стили для элементов списка */
}

selectortags
------------------------------------------
Селекторы по классам
Класс — это один из атрибутов тегов. Выглядит он вот так:

<li class="first"></li>
Этот атрибут особенный, так как в CSS существует возможность выбирать элементы по классу. Делается это с помощью такого селектора:
.имя_класса. Например:

.first {
  /* стили для класса first */
}

selectorclass
-----------------------------------------
Отрабатываем селекторы по классам
В этом курсе ваша задача — раскрашивать мишени в определённые цвета, применяя подходящие селекторы.
Всего будет три типа выстрелов в мишень, каждому из которых соответствует свой цвет:
Мишень закрыта — background-color: white;
Выстрел мимо — background-color: red;
Ошибка техники (попадание есть, но мишень не закрылась) — background-color: yellow;

Потренируемся использовать классы.

hitmisstech
----------------------------------------
Контекстные селекторы
Селектор может состоять из нескольких частей, разделённых пробелом, например:

p strong { ... }
ul .hit { ... }
.footer .menu a { ... }
Такие селекторы называют контекстными или вложенными. Их используют для того, чтобы применить стили к элементу, только если
он вложен в нужный элемент.

Например, селектор .menu a сработает для ссылки a только в том случае, если она расположена внутри элемента с классом .menu.

Читать их проще всего справа налево:

/* выбрать все теги strong внутри тегов p */
p strong { ... }

/* выбрать все элементы с классом .hit внутри тегов ul */
ul .hit { ... }

/* выбрать все ссылки внутри элементов с классом .menu,
   которые лежат внутри элементов с классом .footer */
.footer .menu a { ... }
Таким образом, можно задавать элементам различные стили в зависимости от их контекста. Если ссылка расположена внутри меню,
 сделать её крупнее, а если внутри основного текста, то задать ей нужный цвет.

В этом задании вы потренируетесь использовать контекстные селекторы.


contextselectors
-----------------------------------------
Соседние селекторы

Контекстные селекторы используются для вложенных друг в друга элементов, а соседние — для расположенных рядом.

Например, теги <li> в списке являются соседними по отношению друг к другу и вложенными в тег <ul>.

Соседние селекторы записываются с помощью знака +, например, селектор1 + селектор2. Стили применятся к элементу,
подходящему под селектор2, только если сразу перед ним расположен элемент, подходящий под селектор1.

Пример. Есть два элемента списка:

<li class="hit"></li>
<li class="miss"></li>
Селектор .hit + .miss применит стили к элементу с классом miss, так как перед ним есть элемент с классом hit.

Селектор .hit + li тоже применит стили к элементу с классом miss, а селектор .miss + .hit не сработает.

neighbourselector
-------------------------------------------
