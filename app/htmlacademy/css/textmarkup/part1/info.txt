Главный текстовый тег — span

При оформлении текста с помощью css чаще всего используют тег <span>. Он обозначает «просто текстовый блок».
То есть особенного собственного смысла он не имеет. Также этот тег никак не изменяет отображение текста.

Однако, дополнительный смысл данному тегу добавляют с помощью классов. Например:

<span class="error"></span>
<span class="ok"></span>
А уже для класса с помощью css задают стили и тем самым изменяют оформление.

importantnoteerror
-----------------------------------------------
Свойство font-size: задаём размер шрифта

Cвойство font-size задает размер шрифта.

Размер шрифта лучше всего задавать в em — относительной единице измерения. 1em обычно равен длине буквы M в данном шрифте.

Другие единицы измерения для задания размеров шрифта:

Пиксели: 20px
Пункты: 15pt
Проценты: 80%
Пиксели и пункты — это абсолютные единицы измерения, а проценты — относительные.

Также размер шрифта можно задавать с помощью ключевых слов: small, large и т.д. Но их обычно не используют.

fontsize
-----------------------------------------------
Свойство font-weight: толщина начертания
Полужирность текста можно задавать с помощью свойства font-weight, которое имеет два основных значения:

normal — обычное начертание;
bold — полужирное начертание.
На самом деле это свойство имеет много значений: bold, bolder, lighter, normal, 100, 200, 300, 400, 500, 600, 700, 800, 900. Эти
значения задают степень толщины шрифта, от самого тонкого, до самого толстого.

Но большинство браузеров всё равно умеют отображать только два варианта толщины: обычный и полужирный. Поэтому и остальные
 значения свойства обычно не используют.

fontweight
--------------------------------------------------
Свойство font-style: курсив

Начертание текста можно задавать с помощью свойства font-style. Его основные значения:

normal — обычное начертание;
italic — курсивное начертание.
Это свойство имеет и другие значения, но их почти не используют.

fontstyle
---------------------------------------------------
Свойство font-family: шрифт
ие шрифта: "Times New Roman". А можно задавать желаемый тип шрифта, например:

serif — шрифт с засечками;
sans-serif — шрифт без засечек.
Есть и другие типы, но они используются реже.

Обычно в качестве значения свойства задают список шрифтов, перечисляя их через запятую. В начале списка располагают самый редкий шрифт,
затем похожий, но более распространенный, а в самом конце списка — желаемый тип шрифта. Пример:

body {
    font-family: "PT Sans", "Arial", serif;
}
Браузер проходит по списку слева направо и использует первый найденный в системе шрифт.

fontfamily
--------------------------------------------------
Свойство color: цвет текста

Цвет текста задаётся с помощью свойства color. Значение цвета можно задавать разными способами:

Шестнадцатеричным кодом, например #FF9900.
Ключевым словом: red.
В RGB-формате: rgb(255, 255, 0).
Чаще всего цвет задают в шестнадцатеричном формате.

color
----------------------------------
Свойство text-decoration: подчёркивание и другие эффекты
Дополнительное оформление текста можно задать с помощью свойства text-decoration. Его значения:

underline — подчеркивание;
line-through — зачеркивание;
overline — черта сверху;
none — убирает вышеперечисленные эффекты.
К тексту можно одновременно применить несколько эффектов, если перечислить значения через пробел.

textdecoration
-----------------------------------
Декоративное подчёркивание
Вы, наверное, уже много раз видели красивое пунктирное подчеркивание. Его используют для оформления ссылок и других
 динамических элементов. Технология следующая:

Убираем обычное подчеркивание с помощью text-decoration.
Задаем нужный цвет текста с помощью color.
Добавляем декоративное подчеркивание с помощью свойства border-bottom.
Также можно при наведении курсора скрывать такое подчеркивание с помощью псевдокласса :hover.


textunderline
--------------------------------------
Задаём регистр символов с помощью text-transform
С помощью css можно управлять даже регистром символов: делать буквы строчными или прописными. Делается это с помощью свойства
text-transform. Его значения:

lowercase — все строчные;
uppercase — все прописные;
capitalize — каждое слово начинается с прописной;
none — отменяет изменение регистра.

symbolregister
--------------------------------------
Управляем пробелами: white-space
Как вы уже знаете, браузер игнорирует множественные пробелы и переносы строк в HTML-коде. Изменить это поведение можно с помощью
 тега <pre>.
Однако, с помощью CSS управлять пробелами и переносами можно более гибко. За это отвечает свойство white-space, значения которого:

nowrap — отображает весь текст одной строкой без переносов;
pre — сохраняет пробелы и переносы как в исходном коде аналогично тегу <pre>;
pre-wrap — работает как значение pre, но добавляет автоматические переносы, если текст не помещается в контейнер;
normal — режим по умолчанию.

whitespace
-------------------------------------
Горизонтальное выравнивание текста: text-align

Выравнивание текста по горизонтали задается с помощью свойства text-align. Его вы уже использовали в курсе про таблицы. Значения свойства:

left — выравнивание по левому краю;
right — по правому краю;
center — по центру;
justify — по ширине

textalign
-----------------------------------
Вертикальное выравнивание: vertical-align
Выравниванием текста по вертикали можно управлять с помощью свойства vertical-align. Его действие хорошо заметно в ячейках таблицы.
 Внутри текстовой строки «работа» этого свойства заметна, если в ней есть фрагменты разного размера.

У данного свойства много значений, но самые часто используемые:

top — выравнивание по верхнему краю строки;
middle — по середине;
bottom — по нижнему краю;
baseline — по базовой линии (значение по умолчанию).

verticalalign
-----------------------------------
Верхние и нижние индексы на CSS

С помощью CSS можно имитировать теги <sub> и <sup>, которые применяются для создания нижних и верхних индексов. Делается это так:

Используем свойство vertical-align со значением sub или super.
Немного уменьшаем размер шрифта с помощью font-size.

lowhighindexes
-----------------------------------
Свойство line-height: управляем высотой строки

Высотой строки или, правильнее, межстрочным интервалом можно управлять с помощью свойства line-height. Значение этого свойства можно
задавать следующими способами:

Множителем, например 1.5, 2.
В процентах: 150%.
С помощью любых других единиц измерения CSS: 12px, 2em.
Ключевым словом normal, которое задает автоматический расчет высоты строки.
Предпочтительнее задавать межстрочный интервал либо множителем, либо в относительных единицах измерения.

lineheight
-----------------------------------
Вертикальный ритм текста

В веб-дизайне существует понятие «вертикальный ритм текста». Оно достаточно сложное и мы не будем глубоко в него вдаваться.
Отметим лишь, что хороший вертикальный ритм улучшает восприятие текста.

Чтобы сохранить вертикальный ритм и хорошую читабельность текста при любом размере шрифта, нужно задавать размеры шрифта, межстрочный
 интервал и вертикальные отступы между заголовками и абзацами в относительных единицах.

Тогда, как бы пользователь ни изменял размер шрифта, ваш текст останется читабельным и удобным для восприятия. В этом задании вы
потренируетесь использовать относительные единицы измерения.



verticalritm
------------------------------------
