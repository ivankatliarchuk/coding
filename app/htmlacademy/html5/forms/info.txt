Испытание: формы — вспомнить всё

Вы уже наверняка прошли вводный курс посвященный формам.
 Давайте быстро вспомним, чему мы научились.

Используйте для выполнения задания теги:

input с разными значениями type
select
label
У одного поля ввода должен быть дополнительный класс. Не забывайте размечать подписи к полям.
 Большая часть подписей содержит только текст, но одна подпись оборачивает и поле, и текст подписи.

challangemember
--------------------------
Сброс введенных значений

Сначала разберёмся с возможностями кнопок, не рассмотренными в базовом курсе про формы.

Экспериментировать будем над формой логина в котопрофайл.

В HTML-формах есть специальная кнопка, которая сбрасывает введённые значения и возвращает изначально установленные.
 Это поле ввода с типом reset.
Пример использования:

<input type="reset" value="Сбросить">
Обратите внимание, что кнопка не обнуляет значения, а возвращает те, которые были установлены в полях формы по умолчанию.

clearinput
---------------------------
Простая кнопка

Помимо кнопок отправки формы или сброса введенных значений, существуют и «просто кнопки».
 При щелчке на такую кнопку никаких действий не происходит, а все необходимые действия обычно задаются при помощи JavaScript.

Пример записи:
<input type="button" value="Кнопка">

simplebutton
---------------------------
Кнопка-изображение

В качестве кнопки отправки формы можно использовать изображение.

Для этого у тега input нужно указать тип image.

Аналогично обычным изображениям на сайте у кнопки-изображения есть еще два атрибута:

src	адрес изображения
alt	альтернативный текст, отображаемый в том случае, если изображение не загружено
Кнопка-изображение работает аналогично кнопке submit, но на сервер дополнительно передаются координаты точки,
по которой был произведен щелчок.

buttonimage
---------------------------
Альтернативный способ задания кнопок

Помимо тега <input> для добавления кнопок можно использовать тег <button>. Он расширяет возможности создания кнопок.
Внутри тега <button> можно размещать любые HTML-элементы, в том числе изображения. Например:
<button>Календарь <img src="/assets/course74/calend.png" alt=""></button>
В данном случае кнопка будет выглядеть примерно вот так:
Если в атрибуте type тега <button> указать значение submit или reset, то кнопка будет отправлять данные на сервер или
сбрасывать введенные значения.
По умолчанию значение атрибута type – submit.
То есть внутри формы кнопка <button> по нажатию отправит форму на сервер.

altbutton
----------------------------
Обязательные поля

Ура, товарищи! Мы успешно разобрались с возможностями кнопок в формах и залогинились в профайл Кексика.

Теперь нам предстоит изучить новые возможности форм, большая часть которых была добавлена в HTML5.
 А в процессе мы будем помогать Кексику строить формы, используя полученные знания.

Итак, начнём…

Кексик, как и любой уважающий себя кот, любит рыбу. Но при этом каждый раз ходить в рыбную лавку за лососем ему лень.
 Поэтому он, как уважающий себя инженер, решил облегчить свою жизнь автоматизацией процесса: он собрался сделать форму
 доставки любимых лакомств на дом, чтобы ей мог пользоваться он сам и его друзья-котаны. Кексик начал её верстать, и ему
 надо помочь в этом нелёгком деле.

Сначала давайте разберёмся с обязательными полями. Чтобы указать, что поле обязательно для заполнения, нужно добавить
ему пустой атрибут required:

<input type="text" required>
При попытке отправить форму с незаполнеными обязательными полями браузер выведет всплывающее предупреждение, которое
 в Chrome и Firefox выглядит вот так:

mandatoryinput
----------------------------
Поле выбора даты

В форму заказа важно включить поле даты доставки. А для выбора даты из календаря
 существует новый тип поля ввода — date. При клике на данное поле в форме всплывает календарик.

Пример записи:

<input type="date">
В Chrome это выглядит так:


datefield
----------------------------
Поле выбора времени

В предыдущем задании мы рассмотрели использование тега <input> с типом date.
Но иногда нужно указывать дату в других форматах, и для этого существуют дополнительные «временные» типы полей,
например, time для выбора времени.
Используем поле выбора времени в нашей форме:

timeinput
----------------------------
Список возможных значений

Для текстовых полей можно заранее определить список возможных значений, которые отображаются,
когда вы начинаете вводить текст в поле. Для этого существует специальный тег <datalist>.

Пример использования:

<input type="text" list="browsers" name="browser">

<datalist id="browsers">
  <option value="Firefox">
  <option value="Chrome">
  <option value="Safari">
</datalist>
В Chrome это выглядит так:

Связывание текстового поля и списка осуществляется при помощи атрибута list у тега input — значение list должно быть таким же,
 как значение атрибута id у списка.

Если тег input имеет специфический тип, например email или другие, которые будут рассмотрены далее в курсе,
то в списке отображаются только корректные для данного типа значения.

possiblevalues
----------------------------
Поле ввода числового значения

Для ввода числовых значений существует специальный тип поля ввода number. Рядом с полем браузер
 автоматически подставляет две стрелочки для увеличения и уменьшения числового значения.

Пример записи:

<input type="number">
В Chrome это выглядит так:

При помощи вспомогательных атрибутов min и max можно установить верхнюю и нижнюю границу допустимых значений.
 А атрибут step устанавливает величину шага изменения значения.

Также стоит отметить, что поле ввода числа, как и некоторые другие поля, которые будут рассмотрены дальше,
по-особому ведёт себя в мобильных браузерах: например, при фокусе на такое поле появляется клавиатура, позволяющая
вводить соответствующие символы.

inputnumbers
-----------------------------











